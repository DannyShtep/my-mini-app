<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8" />
  <title>TON PvP Рулетка</title>
  <script src="https://telegram.org/js/telegram-web-app.js"></script>
  <style>
    body {
      margin: 0;
      background: #000;
      color: #fff;
      font-family: Arial, sans-serif;
      text-align: center;
    }
    h1 {
      margin: 20px;
      color: #00ffcc;
    }
    #timer {
      font-size: 18px;
      margin-top: 10px;
      color: #ff0;
    }
    #roulette {
      margin: 20px auto;
      width: 300px;
      height: 300px;
      border-radius: 50%;
      border: 8px solid #00ffcc;
      overflow: hidden;
    }
    canvas {
      transform: rotate(-90deg);
    }
    #players {
      max-width: 320px;
      margin: 0 auto 20px;
    }
    .player {
      display: flex;
      align-items: center;
      justify-content: center;
      margin: 5px 0;
    }
    .player img {
      width: 32px;
      height: 32px;
      border-radius: 50%;
      margin-right: 8px;
    }
    button {
      background: #00ffcc;
      color: #000;
      padding: 10px 20px;
      border: none;
      border-radius: 8px;
      font-weight: bold;
      cursor: pointer;
    }

    /* Модальное окно */
    #resultModal {
      display: none;
      position: fixed;
      top: 30%;
      left: 50%;
      transform: translate(-50%, -30%);
      background: #111;
      border: 2px solid #00ffcc;
      border-radius: 12px;
      padding: 20px;
      color: #fff;
      z-index: 1000;
      width: 260px;
      text-align: center;
      box-shadow: 0 0 10px #00ffcc;
    }

    #closeModal {
      position: absolute;
      top: 8px;
      right: 10px;
      color: #00ffcc;
      background: none;
      border: none;
      font-size: 18px;
      cursor: pointer;
    }
  </style>
</head>
<body>
  <h1>TON PvP Рулетка</h1>
  <div id="timer">Ожидание игроков...</div>
  <div id="roulette"><canvas id="wheel" width="300" height="300"></canvas></div>
  <div id="players"></div>
  <button id="addNft">Добавить NFT</button>

  <!-- Модалка результата -->
  <div id="resultModal">
    <button id="closeModal">✕</button>
    <h2>🎉 Победитель!</h2>
    <p id="winnerName">@username</p>
    <p id="winnerAmount">Ставка: 10 TON</p>
  </div>

  <script>
    const tg = window.Telegram.WebApp;
    tg.expand();

    const canvas = document.getElementById("wheel");
    const ctx = canvas.getContext("2d");
    const modal = document.getElementById("resultModal");
    const closeModal = document.getElementById("closeModal");
    const winnerNameEl = document.getElementById("winnerName");
    const winnerAmountEl = document.getElementById("winnerAmount");

    let players = {};
    let sectors = [];
    let totalValue = 0;
    let angleOffset = 0;
    let spinInterval;
    let gameStarted = false;
    let timer = 0;
    let isLocked = false;

    const colors = ["#ff4444", "#44ff44", "#4444ff", "#ffaa00", "#00ffaa", "#ff00aa", "#cc33ff", "#ff8888"];

    const getUser = () => {
      const fakeId = Math.floor(Math.random() * 100000);
      const seed = Math.floor(Math.random() * 9999);
      return {
        id: fakeId,
        username: "user_" + seed,
        photo_url: "https://api.dicebear.com/7.x/identicon/svg?seed=" + seed
      };
    };

    const drawWheel = () => {
      ctx.clearRect(0, 0, 300, 300);
      let start = angleOffset;
      sectors.forEach(sec => {
        const angle = (sec.value / totalValue) * 2 * Math.PI;
        ctx.beginPath();
        ctx.moveTo(150, 150);
        ctx.arc(150, 150, 140, start, start + angle);
        ctx.fillStyle = sec.color;
        ctx.fill();
        start += angle;
      });

      ctx.beginPath();
      ctx.moveTo(150, 0);
      ctx.lineTo(145, 20);
      ctx.lineTo(155, 20);
      ctx.fillStyle = "#fff";
      ctx.fill();
    };

    const updatePlayersUI = () => {
      const container = document.getElementById("players");
      container.innerHTML = "";
      Object.values(players).forEach(p => {
        const div = document.createElement("div");
        div.className = "player";
        const ton = p.nft.reduce((sum, n) => sum + n.value, 0);
        div.innerHTML = `<img src="${p.photo}" /><span>@${p.name} — ${ton} TON</span>`;
        container.appendChild(div);
      });
    };

    const buildSectors = () => {
      sectors = [];
      totalValue = 0;
      Object.values(players).forEach(p => {
        p.nft.forEach(nft => {
          sectors.push({
            username: p.name,
            color: p.color,
            value: nft.value
          });
          totalValue += nft.value;
        });
      });
    };

    const startTimer = () => {
      gameStarted = true;
      timer = 30;
      const interval = setInterval(() => {
        if (timer <= 0) {
          clearInterval(interval);
          document.getElementById("timer").textContent = "Запуск рулетки...";
          rollWheel();
        } else {
          if (timer <= 3 && !isLocked) {
            isLocked = true;
            document.getElementById("addNft").disabled = true;
          }
          document.getElementById("timer").textContent = `Игра начнется через ${timer} сек.`;
          timer--;
        }
      }, 1000);
    };

    const rollWheel = () => {
      const rand = Math.random() * totalValue;
      let winner, angleTarget = 0, acc = 0;

      for (let i = 0; i < sectors.length; i++) {
        acc += sectors[i].value;
        if (rand <= acc) {
          winner = sectors[i];
          break;
        }
      }

      let index = sectors.indexOf(winner);
      let angle = 0;
      for (let i = 0; i < index; i++) {
        angle += (sectors[i].value / totalValue) * 360;
      }
      angle += ((sectors[index].value / totalValue) * 360) / 2;
      let finalAngle = 360 * 6 - angle;

      let current = 0;
      spinInterval = setInterval(() => {
        angleOffset = (current * Math.PI) / 180;
        drawWheel();
        current += 10;
        if (current >= finalAngle) {
          clearInterval(spinInterval);
          angleOffset = (finalAngle * Math.PI) / 180;
          drawWheel();
          document.getElementById("timer").textContent = `🎉 Победил @${winner.username}`;
          tg.showAlert(`🎉 Победил @${winner.username}`);
          showResultModal(winner.username, winner.value);
        }
      }, 20);
    };

    const showResultModal = (username, amount) => {
      winnerNameEl.textContent = `@${username}`;
      winnerAmountEl.textContent = `Ставка: ${amount} TON`;
      modal.style.display = "block";

      setTimeout(() => {
        modal.style.display = "none";
      }, 2000);
    };

    closeModal.addEventListener("click", () => {
      modal.style.display = "none";
    });

    document.getElementById("addNft").addEventListener("click", () => {
      if (isLocked) return;

      const user = getUser();
      const value = Math.floor(Math.random() * 20 + 5);
      const color = colors[Object.keys(players).length % colors.length];

      if (!players[user.id]) {
        players[user.id] = {
          name: user.username,
          photo: user.photo_url,
          color,
          nft: []
        };
      }

      players[user.id].nft.push({ value });
      updatePlayersUI();
      buildSectors();
      drawWheel();

      if (Object.keys(players).length >= 2 && !gameStarted) {
        startTimer();
      }
    });

    drawWheel();
  </script>
</body>
</html>
