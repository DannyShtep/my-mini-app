<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8">
  <title>GrinchRolls</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link href="https://fonts.googleapis.com/css2?family=Jolly+Lodger&display=swap" rel="stylesheet">
  <script src="https://unpkg.com/@tonconnect/sdk@latest/dist/tonconnect-sdk.min.js"></script>
  <style>
    body {
      margin: 0;
      font-family: 'Jolly Lodger', cursive;
      background: linear-gradient(to bottom right, #101010, #000000);
      color: #fff;
      overflow-x: hidden;
    }
    .container {
      display: flex;
      flex-direction: column;
      align-items: center;
      padding: 20px;
    }
    #top-bar {
      display: flex;
      justify-content: space-between;
      width: 100%;
      padding: 10px 20px;
    }
    .icon-btn {
      background: none;
      border: none;
      width: 36px;
      height: 36px;
    }
    .icon-btn img {
      width: 100%;
      height: 100%;
    }
    #tonBalance {
      font-size: 16px;
      color: #0f0;
    }
    #roulette-container {
      position: relative;
      width: 80vw;
      height: 80vw;
      margin-top: 30px;
    }
    #wheel {
      width: 100%;
      height: 100%;
      border-radius: 50%;
      box-shadow: 0 0 30px #0f0, inset 0 0 30px #0f0;
      background: radial-gradient(circle at center, #222, #000);
    }
    #arrow {
      position: absolute;
      top: calc(50% + 40vw);
      left: 50%;
      transform: translateX(-50%) rotate(180deg);
      width: 0;
      height: 0;
      border-left: 20px solid transparent;
      border-right: 20px solid transparent;
      border-top: 30px solid #00ff00;
      filter: drop-shadow(0 0 8px #0f0);
      z-index: 10;
    }
    #center-timer {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      width: 100px;
      height: 100px;
      background: #000;
      border-radius: 50%;
      color: #00ff00;
      font-size: 24px;
      display: flex;
      justify-content: center;
      align-items: center;
      border: 3px solid #0f0;
      z-index: 20;
    }
    #addGiftBtn {
      margin-top: 20px;
      padding: 10px 20px;
      background: linear-gradient(45deg, #00c853, #009624);
      border: none;
      border-radius: 12px;
      color: white;
      font-size: 18px;
      font-weight: bold;
      box-shadow: 0 0 10px #00ff00;
      cursor: pointer;
    }
    #playersTable {
      margin-top: 30px;
      font-size: 16px;
      width: 90%;
    }
    .player-entry {
      display: flex;
      align-items: center;
      justify-content: space-between;
      background: #111;
      padding: 10px;
      border-radius: 10px;
      margin-bottom: 6px;
    }
    .player-entry img {
      width: 30px;
      height: 30px;
      border-radius: 50%;
      margin-right: 10px;
    }
    #bottom-bar {
      position: fixed;
      bottom: 20px;
      width: 100%;
      display: flex;
      justify-content: center;
      gap: 30px;
    }
    #bottom-bar button {
      background: #1b1b1b;
      border: 1px solid #00ffcc;
      color: #00ffcc;
      border-radius: 10px;
      padding: 10px 16px;
      font-size: 16px;
      cursor: pointer;
    }
    #winnerModal {
      position: fixed;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      background: #111;
      border: 2px solid #00ff00;
      padding: 20px;
      border-radius: 10px;
      display: none;
      z-index: 999;
      color: #fff;
      text-align: center;
    }
    #winnerModal button {
      margin-top: 10px;
      padding: 5px 10px;
      background: #333;
      border: none;
      color: #fff;
      cursor: pointer;
    }
  </style>
</head>
<body>
  <div class="container">
    <div id="top-bar">
      <button class="icon-btn"><img src="https://cdn-icons-png.flaticon.com/512/1144/1144760.png" alt="Profile"></button>
      <div id="tonBalance">Баланс: -- TON</div>
      <button class="icon-btn" onclick="connectTON()"><img src="https://cryptologos.cc/logos/ton-crystal-ton-logo.png" alt="TON"></button>
    </div>

    <div id="roulette-container">
      <div id="arrow"></div>
      <canvas id="wheel"></canvas>
      <div id="center-timer">10</div>
    </div>

    <button id="addGiftBtn" onclick="addGift()">Добавить подарок</button>

    <div id="playersTable"></div>
  </div>

  <div id="bottom-bar">
    <button>История</button>
    <button>Инвентарь</button>
  </div>

  <div id="winnerModal">
    <div id="winnerText"></div>
    <button onclick="document.getElementById('winnerModal').style.display='none'">Закрыть</button>
  </div>

  <script>
    let players = [];
    const wheel = document.getElementById('wheel');
    const ctx = wheel.getContext('2d');
    let angle = 0;

    function drawWheel() {
      ctx.clearRect(0, 0, wheel.width, wheel.height);
      const total = players.reduce((sum, p) => sum + p.ton, 0);
      let start = angle;
      players.forEach((p, i) => {
        const portion = (p.ton / total) * Math.PI * 2;
        ctx.beginPath();
        ctx.moveTo(250, 250);
        ctx.arc(250, 250, 240, start, start + portion);
        ctx.fillStyle = `hsl(${i * 60}, 100%, 50%)`;
        ctx.fill();
        start += portion;
      });
    }

    function spinWheel() {
      let duration = 10000;
      let startTime;
      let from = angle;
      let to = angle + Math.PI * 6 + Math.random() * Math.PI * 2;
      function frame(time) {
        if (!startTime) startTime = time;
        const progress = Math.min((time - startTime) / duration, 1);
        angle = from + (to - from) * easeOut(progress);
        drawWheel();
        if (progress < 1) {
          requestAnimationFrame(frame);
        } else {
          const total = players.reduce((sum, p) => sum + p.ton, 0);
          let winnerAngle = (angle % (Math.PI * 2));
          let acc = 0;
          for (let p of players) {
            const portion = (p.ton / total) * Math.PI * 2;
            if (winnerAngle >= acc && winnerAngle < acc + portion) {
              showWinner(p);
              break;
            }
            acc += portion;
          }
        }
      }
      requestAnimationFrame(frame);
    }

    function easeOut(t) {
      return 1 - Math.pow(1 - t, 4);
    }

    function showWinner(player) {
      const modal = document.getElementById('winnerModal');
      document.getElementById('winnerText').innerText = `Победитель: @${player.username}\nСтавка: ${player.ton} TON`;
      modal.style.display = 'block';
      setTimeout(() => modal.style.display = 'none', 2000);
    }

    function addGift() {
      const newPlayer = {
        username: 'user' + (players.length + 1),
        ton: Math.floor(Math.random() * 50) + 10
      };
      players.push(newPlayer);
      renderPlayers();
      drawWheel();
      if (players.length >= 2) {
        setTimeout(() => spinWheel(), 2000);
      }
    }

    function renderPlayers() {
      const table = document.getElementById('playersTable');
      table.innerHTML = '';
      players.forEach(p => {
        const row = document.createElement('div');
        row.className = 'player-entry';
        row.innerHTML = `<img src="https://api.dicebear.com/7.x/identicon/svg?seed=${p.username}" /><span>@${p.username}</span><span>${p.ton} TON</span>`;
        table.appendChild(row);
      });
    }

    async function connectTON() {
      const connector = new TONConnect();
      await connector.restoreConnection();
      if (!connector.connected) {
        await connector.connect();
      }
      const balance = '123'; // mock balance here
      document.getElementById('tonBalance').textContent = `Баланс: ${balance} TON`;
    }

    drawWheel();
  </script>
</body>
</html>
